@model EditableUserViewModel

<div class="text-left">
  @using (Html.BeginForm("Add", "Users", FormMethod.Post))
  {
    <div id="divSaveErrorMessage" style="display: none;">
      <h6 class="text-danger"><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Error</h6>
      <p id="lblSaveErrorMessage">Failed to save user information</p>
      <hr />
    </div>

    <div class="row mb-3">
      <div class="col-xs-12">
        <label class="form-label small fw-bolder" asp-for="UserId">User ID <span class="text-danger">*</span></label><br />
        <input type="text" class="form-control form-control-sm whl-formfield-userid" placeholder="Enter User ID" maxlength="4" asp-for="UserId" />
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-xs-12">
        <label class="form-label small fw-bolder" asp-for="EmailAddress">Email Address <span class="text-danger">*</span></label><br />
        <input type="text" class="form-control form-control-sm whl-formfield-emailaddress" placeholder="Enter Email Address" maxlength="200" asp-for="EmailAddress" />
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-xs-12">
        <label class="form-label small fw-bolder" asp-for="DisplayName">Display Name <span class="text-danger">*</span></label><br />
        <input type="text" class="form-control form-control-sm whl-formfield-displayname" placeholder="Enter Display Name" maxlength="200" asp-for="DisplayName" />
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-xs-12">
        <label class="form-label small fw-bolder" asp-for="OrganizationCd">Organization <span class="text-danger">*</span></label><br />
        <select class="form-select form-select-sm whl-formfield-organizationcd" placeholder="Select Organization" asp-for="OrganizationCd" asp-items="@(new SelectList(Model.Organizations, "Key", "Value", Model.OrganizationCd))"></select>
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-xs-12">
        <label class="form-label small fw-bolder" asp-for="RoleCd">Role <span class="text-danger">*</span></label><br />
        <select class="form-select form-select-sm whl-formfield-rolecd" placeholder="Select Role" asp-for="RoleCd" asp-items="@(new SelectList(Model.Roles, "Key", "Value", Model.RoleCd))"></select>
      </div>
    </div>
  }
</div>

<script>
  //<![CDATA[
  $(function () {

    // Disable submission
    $('.whl-action-save-user').attr('disabled', 'disabled');
    fnToggleUsername();
    fnToggleSaveUser();

    $('.whl-formfield-userid').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v !== undefined && v !== null && v.trim().length === 4) {
        $(this).addClass('is-valid');
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveUser();
    });

    $('.whl-formfield-emailaddress').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (fnIsValidUsername(v)) {
        $(this).addClass('is-valid');
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveUser();
    });

    $('.whl-formfield-displayname').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v !== undefined && v !== null && v.trim().length > 0) {
        $(this).addClass('is-valid');
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveUser();
    });

    $('.whl-formfield-organizationcd').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v !== undefined && v !== null && v.trim().length > 0) {
        $(this).addClass('is-valid');
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveUser();
    });

    $('.whl-formfield-rolecd').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v !== undefined && v !== null && v.trim().length > 0) {
        $(this).addClass('is-valid');
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveUser();
    });

    function fnToggleUsername() {
      var a = $('#hidUserAction').val();
      if (a === 'EDIT') {
        $('.whl-formfield-userid').attr('disabled', 'disabled');
      }
    }

    function fnToggleSaveUser() {
      var un = $('.whl-formfield-emailaddress').val();
      var dn = $('.whl-formfield-displayname').val();
      var oc = $('.whl-formfield-organizationcd').val();
      var rc = $('.whl-formfield-rolecd').val();
      var allowSubmission = (un !== undefined && un !== null && un.trim().length > 0)
                              && (dn !== undefined && dn !== null && dn.trim().length > 0)
                              && (oc !== undefined && oc !== null && oc.trim().length > 0)
                              && (rc !== undefined && rc !== null && rc.trim().length > 0);
      if (allowSubmission) {
        $('.whl-action-save-user').removeAttr('disabled');
      }
      else {
        $('.whl-action-save-user').attr('disabled', 'disabled');
      }
    }
  });
  //]]>
</script>