@model EditableAmiConfigViewModel

<div class="text-left">
  @using (Html.BeginForm("Add", "AMIConfigs", FormMethod.Post))
  {
    <div id="divSaveErrorMessage" style="display: none;">
      <h6 class="text-danger"><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Error</h6>
      <p id="lblSaveErrorMessage">Failed to save AMI information</p>
      <hr />
    </div>

    <input type="hidden" asp-for="EffectiveYear" value="@Model.EffectiveYear" class="whl-formfield-effectiveyear" />
    <input type="hidden" asp-for="Mode" value="@Model.Mode" class="whl-formfield-mode" />

    <div class="row mb-3">
      <div class="col-xs-12 col-md-6">
        <label class="form-label small fw-bolder" asp-for="EffectiveDate">Effective Date <span class="text-danger">*</span></label><br />
        @if (Model.Mode == "ADD")
        {
          <input type="date" class="form-control form-control-sm whl-formfield-effectivedate" placeholder="MM/dd/yyyy" maxlength="10" asp-for="EffectiveDate" />
        }
        else
        {
          <input type="text" name="EffectiveDate" id="EffectiveDate" value="@Model.EffectiveDate" class="form-control whl-formfield-effectivedate" disabled="disabled" />
        }
      </div>
      <div class="col-xs-12 col-md-6">
        <label class="form-label small fw-bolder" asp-for="IncomeAmt">4P Household AMI <span class="text-danger">*</span></label><br />
        <div class="input-group input-group-sm">
          <span class="input-group-text">$</span>
          <input type="text" class="form-control form-control-sm whl-formfield-numeric whl-formfield-incomeamt" placeholder="Enter Income Amount" maxlength="9" asp-for="IncomeAmt" />
        </div>
      </div>
    </div>

    <hr />

    @for (var hhSizeCtr = 0; hhSizeCtr < 10; hhSizeCtr+=4)
    {
      <div class="row mb-3">
        @for (var colCtr = 0; colCtr < 4; colCtr ++)
        {
          var hhCtr = hhSizeCtr + colCtr;
          if (hhCtr > 9) continue;
          var fieldId = $"Hh{hhCtr + 1}";
          var classId = $"whl-formfield-hh{hhCtr + 1}";
          var fieldLabel = $"{hhCtr + 1}P Household";
          var labelId = $"whl-label-hh{hhCtr + 1}";
          <div class="col-xs-12 col-md-3">
            <label class="form-label small fw-bolder" for="@fieldId">@fieldLabel <span class="text-danger">*</span></label><br />
            <div class="input-group input-group-sm">
              <input type="text" class="form-control form-control-sm whl-formfield-numeric whl-formfield-hh @classId" name="@fieldId" id="@fieldId" value="@Model.HhPctAmts[hhCtr].Pct" maxlength="3" placeholder="Enter %" />
              <span class="input-group-text">%</span>
            </div>
            <small class="badge bg-light text-dark fw-semibold @labelId mt-8">@Model.HhPctAmts[hhCtr].Amt.ToString("C0")</small>
          </div>
        }
      </div>
    }

    <div class="row mb-3" style="display: none;">
      <div class="col-xs-12">
        <div class="form-check form-switch">
          <input type="checkbox" class="form-check-input" role="switch" asp-for="Active" />
          <label class="form-check-label small" asp-for="Active">Active</label>
        </div>
      </div>
    </div>
  }
</div>

<script>
  //<![CDATA[
  $(function () {

    // Disable submission
    $('.whl-action-save-faq').attr('disabled', 'disabled');
    fnToggleSaveAMI();

    $('.whl-formfield-effectivedate').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v !== undefined && v !== null && v.trim().length > 0) {
        $(this).addClass('is-valid');
        $('.whl-formfield-effectiveyear').val(v.substring(0, 4));
      } else {
        $(this).addClass('is-invalid');
      }
      fnToggleSaveAMI();
    });

    $('.whl-formfield-numeric').on('keypress', function (e) {
      var reg = /^\d+$/;
      var k = e.key;
      return reg.test(e.key);
    });

    $('.whl-formfield-incomeamt').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v === undefined || v === null || v.trim().length === 0) {
        $(this).val('0');
        v = '0';
      }
      var n = parseInt(v);
      if (!isNaN(n) && n < 999999999) {
        $(this).addClass('is-valid');
      }
      fnCalculateAmiAmounts();
      fnToggleSaveAMI();
    });

    $('.whl-formfield-hh').on('change', function (e) {
      $(this).removeClass('is-valid');
      $(this).removeClass('is-invalid');
      var v = $(this).val();
      if (v === undefined || v === null || v.trim().length === 0) {
        $(this).val('0');
        v = '0';
      }
      var n = parseInt(v);
      if (!isNaN(n)) {
        $(this).addClass('is-valid');
      }
      fnCalculateAmiAmounts();
      fnToggleSaveAMI();
    });

    function fnCalculateAmiAmounts() {
      var ia = $('.whl-formfield-incomeamt').val();
      if (isNaN(parseFloat(ia)) || ia <= 0) return;
      $('.whl-formfield-hh').each((i, el) => {
        var p = $(el).val();
        if (!isNaN(parseInt(p)) && p > 0) {
          var a = Math.trunc(ia * p / 100);
          am = Math.trunc(Math.round(a / 50) * 50);
          $('.whl-label-hh' + (i+1).toString()).html('$' + am);
        }
      });
    }

    function fnToggleSaveAMI() {
      var ed = $('.whl-formfield-effectivedate').val();
      var ti = $('.whl-formfield-effectiveyear').val();
      var ia = $('.whl-formfield-incomeamt').val();
      var ds = $('.whl-formfield-displayorder').val();
      var allowSubmission = (ed !== undefined && ed !== null && ed.trim().length > 0)
                              && (ti !== undefined && ti !== null && ti.trim().length > 0)
                              && (ia !== undefined && ia !== null && ia.trim().length > 0)
                              && (ds !== undefined && ds !== null && !isNaN(parseInt(ds)));
      if (allowSubmission) {
        $('.whl-action-save-faq').removeAttr('disabled');
      }
      else {
        $('.whl-action-save-faq').attr('disabled', 'disabled');
      }
    }
  });
  //]]>
</script>