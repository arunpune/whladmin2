@model HousingApplicationReviewSubmitViewModel
@{
  ViewData["Title"] = "Review/Submit Housing Application";
  ViewData["MENUID"] = "DASHBOARD";
}

@await Html.PartialAsync("_Breadcrumb.cshtml", new RailroadViewModel(Model.Username, Model.ApplicationId, Model.ListingId, Model.StepNumber))

<div class="text-left mt-32 bg-white">
  @await Html.PartialAsync("_Railroad.cshtml", new RailroadViewModel(Model.Username, Model.ApplicationId, Model.ListingId, Model.StepNumber))
  <div class="row mb-3">
    <div class="col-xs-12 col-md-9">
      <div class="card border-0">
        <div class="card-body">
          <h5 class="fs-4 border-bottom">Review &amp; Submit Application</h5>
          @using (Html.BeginForm("ReviewSubmitInfo", "Applications", FormMethod.Post, new
          {
            @class = "form whl-form-submit-application mt-32",
            id = "frmReviewSubmitInfo",
            name = "frmReviewSubmitInfo"
          }))
          {

            if (!string.IsNullOrEmpty((Model.Message ?? "").Trim()))
            {
              <div id="divSaveErrorMessage">
                <h6 class="text-danger"><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Error</h6>
                <p id="lblSaveErrorMessage">@Model.Message</p>
                <hr />
              </div>
            }

            <div class="text-left mt-32">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Profile Information</h4>
                  <div class="card-text">
                    <div class="row mb-3 mt-16">
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Name</small><br />
                        @if (!string.IsNullOrEmpty(Model.DisplayName))
                        {
                          <span class="fs-5 fw-semibold text-dark">@Model.DisplayName</span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Last 4 of
                          SSN/ITIN</small><br />
                        @if (!string.IsNullOrEmpty(Model.ApplicantInfo.Last4SSN))
                        {
                          <span class="fs-5 fw-semibold text-dark whl-show-last4ssn" style="display: block;">***-**-**** <i
                              class="fa-regular fa-eye whl-action-togglelast4ssn" title="Show Last 4 of SSN/ITIN"
                              aria-label="Show Last 4 of SSN/ITIN"></i></span>
                          <span class="fs-5 fw-semibold text-dark whl-hide-last4ssn"
                            style="display: none;">@($"***-**-{Model.ApplicantInfo.Last4SSN}") <i
                              class="fa-regular fa-eye-slash whl-action-togglelast4ssn" title="Hide Last 4 of SSN/ITIN"
                              aria-label="Hide Last 4 of SSN/ITIN"></i></span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Date of Birth</small><br />
                        @if (!string.IsNullOrEmpty(Model.DisplayDateOfBirth))
                        {
                          <span class="fs-5 fw-semibold text-dark whl-show-dateofbirth" style="display: block;">**/**/****
                            <i class="fa-regular fa-eye whl-action-toggledateofbirth" title="Show Date of Birth"
                              aria-label="Show Date of Birth"></i></span>
                          <span class="fs-5 fw-semibold text-dark whl-hide-dateofbirth"
                            style="display: none;">@($"{Model.DisplayDateOfBirth}") <i
                              class="fa-regular fa-eye-slash whl-action-toggledateofbirth" title="Hide Date of Birth"
                              aria-label="Hide Date of Birth"></i></span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                    </div>
                    <div class="row mb-3 mt-16">
                      <div class="col-xs-12 col-sm-6 col-md-6"><small class="border-bottom">Identification
                          Document</small><br />
                        @if (!string.IsNullOrEmpty(Model.DisplayIdTypeValue))
                        {
                          if (!string.IsNullOrEmpty(Model.DisplayIdIssueDate))
                          {
                            <span class="fs-5 fw-semibold text-dark">@Model.DisplayIdTypeValue</span>

                            <br />
                            <small>Issued: @Model.DisplayIdIssueDate</small>
                          }
                          else
                          {
                            <span class="fs-5 fw-semibold text-dark">@Model.DisplayIdTypeValue</span>
                          }
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                    </div>
                    <div class="row mb-3 mt-16">
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Gender</small><br />
                        @if (!string.IsNullOrEmpty(Model.GenderDescription) &&
                       Model.ApplicantInfo.GenderCd != "NOTSPEC")
                        {
                          <span class="fs-5 fw-semibold text-dark">@Model.GenderDescription</span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Race</small><br />
                        @if (!string.IsNullOrEmpty(Model.RaceDescription) && Model.ApplicantInfo.RaceCd !=
                       "NOTSPEC")
                        {
                          <span class="fs-5 fw-semibold text-dark">@Model.RaceDescription</span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Ethnicity</small><br />
                        @if (!string.IsNullOrEmpty(Model.EthnicityDescription) &&
                       Model.ApplicantInfo.EthnicityCd != "NOTSPEC")
                        {
                          <span class="fs-5 fw-semibold text-dark">@Model.EthnicityDescription</span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Student</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.ApplicantInfo.StudentInd ? "Yes" : "No")</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Disabled</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.ApplicantInfo.DisabilityInd ? "Yes" :
                        "No")</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Veteran</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.ApplicantInfo.VeteranInd ? "Yes" : "No")</span>
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Ever lived in Westchester
                          County?</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.ApplicantInfo.EverLivedInWestchesterInd ? "Yes"
                        : "No")</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Currently work in Westchester
                          County?</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.ApplicantInfo.CurrentlyWorkingInWestchesterInd ?
                        "Yes" : "No")</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Contact Information</h4>
                  <div class="card-text mt-16">
                    <div class="row mb-3">
                      <div class="col-xs-12 col-sm-6 col-md-6"><small class="border-bottom">Primary Phone Number</small><br />
                        <span class="fs-5 fw-semibold text-dark">
                          @if (Model.ApplicantInfo.PhoneNumberTypeCd == "CELL")
                          {
                            <i class="fa-solid fa-mobile-screen" title="@Model.PhoneNumberTypeDescription" aria-label="@Model.PhoneNumberTypeDescription"></i>
                          }
                          else if (Model.ApplicantInfo.PhoneNumberTypeCd == "LAND")
                          {
                            <i class="fa-solid fa-phone" title="@Model.PhoneNumberTypeDescription" aria-label="@Model.PhoneNumberTypeDescription"></i>
                          }
                          else
                          {
                            <i class="fa-solid fa-square-phone" title="@Model.PhoneNumberTypeDescription" aria-label="@Model.PhoneNumberTypeDescription"></i>
                          }
                          @Model.DisplayPhoneNumber
                          @if (!string.IsNullOrEmpty(Model.ApplicantInfo.PhoneNumberExtn))
                          {
                            <br />
                            <small class="text-secondary">Extension @Model.ApplicantInfo.PhoneNumberExtn</small>
                          }
                        </span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-6"><small class="border-bottom">Alternate Phone Number</small><br />
                        @if (!string.IsNullOrEmpty(Model.ApplicantInfo.AltPhoneNumber))
                        {
                          <span class="fs-5 fw-semibold text-dark">
                            @if (Model.ApplicantInfo.AltPhoneNumberTypeCd == "CELL")
                            {
                              <i class="fa-solid fa-mobile-screen" title="@Model.AltPhoneNumberTypeDescription" aria-label="@Model.AltPhoneNumberTypeDescription"></i>
                            }
                            else if (Model.ApplicantInfo.AltPhoneNumberTypeCd == "LAND")
                            {
                              <i class="fa-solid fa-phone" title="@Model.AltPhoneNumberTypeDescription" aria-label="@Model.AltPhoneNumberTypeDescription"></i>
                            }
                            else
                            {
                              <i class="fa-solid fa-square-phone" title="@Model.AltPhoneNumberTypeDescription" aria-label="@Model.AltPhoneNumberTypeDescription"></i>
                            }
                            @Model.DisplayAltPhoneNumber
                            @if (!string.IsNullOrEmpty(Model.ApplicantInfo.AltPhoneNumberExtn))
                            {
                              <br />
                              <small class="text-secondary">Extension @Model.ApplicantInfo.AltPhoneNumberExtn</small>
                            }
                          </span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                    </div>
                    <div class="row mb-3 mt-16">
                      <div class="col-xs-12 col-sm-6 col-md-6"><small class="border-bottom">Email Address</small><br />
                        <span class="fs-5 fw-semibold text-primary">@Model.ApplicantInfo.EmailAddress</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-6"><small class="border-bottom">Alternate Email Address</small><br />
                        @if (!string.IsNullOrEmpty(Model.ApplicantInfo.AltEmailAddress))
                        {
                          <span class="fs-5 fw-semibold text-dark">@Model.ApplicantInfo.AltEmailAddress</span>
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Address Information</h4>
                  <div class="card-text mt-16">
                    <div class="row mb-3">
                      <div class="col-xs-12 col-md-6">
                        <small class="border-bottom">Physical Address</small><br />
                        @if (!string.IsNullOrEmpty(Model.HouseholdInfo.PhysicalStreetLine1))
                        {
                          @await Html.PartialAsync("~/Views/Household/_AddressDisplay.cshtml", new AddressViewModel()
                          {
                            StreetLine1 = Model.HouseholdInfo.PhysicalStreetLine1,
                            StreetLine2 = Model.HouseholdInfo.PhysicalStreetLine2,
                            StreetLine3 = Model.HouseholdInfo.PhysicalStreetLine3,
                            City = Model.HouseholdInfo.PhysicalCity,
                            StateCd = Model.HouseholdInfo.PhysicalStateCd,
                            ZipCode = Model.HouseholdInfo.PhysicalZipCode,
                            County = Model.HouseholdInfo.PhysicalCounty
                          });
                        }
                        else
                        {
                          <span class="fs-5 fw-light text-secondary">Not Specified</span>
                        }
                      </div>
                      @if (!string.IsNullOrEmpty(Model.HouseholdInfo.PhysicalStreetLine1))
                      {
                        <div class="col-xs-12 col-md-6">
                          <small class="border-bottom">Mailing Address</small><br />
                          @if (Model.HouseholdInfo.DifferentMailingAddressInd)
                          {
                            if (!string.IsNullOrEmpty(Model.HouseholdInfo.MailingStreetLine1))
                            {
                              @await Html.PartialAsync("~/Views/Household/_AddressDisplay.cshtml", new AddressViewModel()
                              {
                                StreetLine1 = Model.HouseholdInfo.MailingStreetLine1,
                                StreetLine2 = Model.HouseholdInfo.MailingStreetLine2,
                                StreetLine3 = Model.HouseholdInfo.MailingStreetLine3,
                                City = Model.HouseholdInfo.MailingCity,
                                StateCd = Model.HouseholdInfo.MailingStateCd,
                                ZipCode = Model.HouseholdInfo.MailingZipCode,
                              });
                            }
                            else
                            {
                              <span class="fs-5 fw-light text-secondary">Not Specified</span>
                            }
                          }
                          else
                          {
                            <span class="fs-5 fw-semibold text-dark">Same as Physical Address</span>
                          }
                        </div>
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Vouchers / Rental Assistance</h4>
                  <div class="card-text mt-16">
                    <div class="row mb-3">
                      <div class="col-xs-12">
                        <small><strong>Note:</strong> This information is used to determine what eligibility levels apply
                          to your application. New York State Human Rights Law prohibits the discrimination in housing
                          based on lawful source of income, including whether you have a Section 8 voucher.</small>
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-xs-12 col-md-6">
                        <small>Does any one in your household receive rental assistance that will move with them to a new
                          apartment?<br />
                          <span class="text-secondary">Vouchers and rental subsidies such as Section 8, or VASH are all
                            accepted. Minimum income requirements do not apply if you have a voucher or a rental subsidy. However,
                            rent should be within maximum limits allowed by your voucher or rental assistance program.</span>
                        </small>
                      </div>
                      <div class="col-xs-12 col-md-6">
                        <span class="fs-5 fw-semibold text-dark">@(Model.HouseholdInfo.VoucherInd ? "Yes" :
                        "No")</span>
                      </div>
                    </div>
                    @if (Model.HouseholdInfo.VoucherInd)
                    {
                      <div class="row mb-3">
                        <div class="col-xs-12 col-md-6">
                          <small>What types of rental assistance does your household receive?</small>
                        </div>
                        <div class="col-xs-12 col-md-6">
                          @if (!string.IsNullOrEmpty(Model.DisplayVouchers))
                          {
                            <span class="fs-5 fw-semibold text-dark">@Model.DisplayVouchers</span>
                          }
                          else
                          {
                            <span class="fs-5 fw-light text-secondary">Not Specified</span>
                          }
                        </div>
                      </div>
                      <div class="row mb-3">
                        <div class="col-xs-12 col-md-6">
                          <small>Name(s) of the office(s) that administer(s) your subsidy(ies)/voucher(s)?</small>
                        </div>
                        <div class="col-xs-12 col-md-6">
                          @if (!string.IsNullOrEmpty(Model.HouseholdInfo.VoucherAdminName))
                          {
                            <span class="fs-5 fw-semibold text-dark">@Model.HouseholdInfo.VoucherAdminName</span>
                          }
                          else
                          {
                            <span class="fs-5 fw-light text-secondary">Not Specified</span>
                          }
                        </div>
                      </div>
                    }
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Live-in Aide Information</h4>
                  <div class="card-text mt-16">
                    <div class="row mb-3">
                      <div class="col-xs-12 col-md-6">
                        <small>Does your household have a live-in aide or assistant?</small>
                      </div>
                      <div class="col-xs-12 col-md-6">
                        <span class="fs-5 fw-semibold text-dark">@(Model.HouseholdInfo.LiveInAideInd ? "Yes" :
                        "No")</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Household Summary</h4>
                  <div class="card-text">
                    <div class="row mb-3">
                      <div class="col-xs-12 col-sm-6 col-md-3"><small class="border-bottom">Household Size</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.Members.Count())</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-9"><small class="border-bottom">Units Applying For</small><br />
                        @foreach (var item in Model.HouseholdInfo.UnitTypes)
                        {
                          var itemSelected = (Model.HouseholdInfo.UnitTypeCds ?? "").Split(",", StringSplitOptions.RemoveEmptyEntries).Contains(item.Key);
                          if (itemSelected)
                          {
                            <span class="fs-5 fw-semibold text-dark mr-16"><i class="fa-solid fa-circle small"></i> @item.Value</span>
                          }
                        }
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Additional Members Information</h4>
                  <div class="card-text mt-16">
                    @if (Model.Members.Any())
                    {
                      <div class="row mb-3 border-bottom">
                        <div class="col-xs-12 col-md-2 text-center">
                          <small class="fw-bold">Co-Applicant</small>
                        </div>
                        <div class="col-xs-11 col-md-4">
                          <small class="fw-bold">Relation Type</small>
                        </div>
                        <div class="col-xs-12 col-md-6">
                          <small class="fw-bold">Name</small>
                        </div>
                      </div>
                      @foreach (var member in Model.Members)
                      {
                        <div class="row mb-3">
                          <div class="col-xs-12 col-md-2 text-center">
                            @if (member.MemberId == Model.AdditionalMembersInfo.CoApplicantMemberId && Model.AdditionalMembersInfo.CoApplicantMemberId > 0)
                            {
                              <i class="fa-solid fa-circle smaller"></i>
                            }
                          </div>
                          <div class="col-xs-11 col-md-4">
                            @member.RelationTypeDescription
                          </div>
                          <div class="col-xs-12 col-md-6">
                            @member.DisplayName
                          </div>
                        </div>
                      }
                    }
                    else
                    {
                      <p>There are no additional members associated with this application.</p>
                    }
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Income &amp; Assets Information</h4>
                  <div class="card-text">
                    <div class="row mb-3">
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Total Annual Gross Income</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.IncomeAssetsInfo.TotalIncomeValueAmt.ToString("C0"))</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Total Value of all Owned Real Estate</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.IncomeAssetsInfo.TotalRealEstateValueAmt.ToString("C0"))</span>
                      </div>
                      <div class="col-xs-12 col-sm-6 col-md-4"><small class="border-bottom">Total Value of Assets</small><br />
                        <span class="fs-5 fw-semibold text-dark">@(Model.IncomeAssetsInfo.TotalAssetValueAmt.ToString("C0"))</span>
                      </div>
                    </div>
                  </div>

                  @if (Model.Members.Any())
                  {
                    <div class="row mb-3 mt-32">
                      <div class="col-xs-12">
                        <h5 class="fs5">Income &amp; Real Estate</h5>
                        <p class="small">The following household income and real estate values will be included in this application.</p>
                      </div>
                    </div>
                    <div class="row mb-3 border-bottom">
                      <div class="col-xs-12 col-md-3">
                        <small class="fw-bold">Relation Type</small>
                      </div>
                      <div class="col-xs-12 col-md-3">
                        <small class="fw-bold">Name</small>
                      </div>
                      <div class="col-xs-12 col-md-3 text-end">
                        <small class="fw-bold">Total Annual Gross Income</small>
                      </div>
                      @* <div class="col-xs-12 col-md-2 text-end">
                        <small class="fw-bold">Assets</small>
                      </div> *@
                      <div class="col-xs-12 col-md-3 text-end">
                        <small class="fw-bold">Real Estate</small>
                      </div>
                    </div>

                    foreach (var member in Model.Members)
                    {
                      <div class="row mb-3">
                        <div class="col-xs-12 col-md-3">
                          @member.RelationTypeDescription
                        </div>
                        <div class="col-xs-12 col-md-3">
                          @member.DisplayName
                        </div>
                        <div class="col-xs-12 col-md-3 text-end">
                          @member.IncomeValueAmt.ToString("C0")
                        </div>
                        @* <div class="col-xs-12 col-md-2 text-end">
                          @member.AssetValueAmt.ToString("C0")
                        </div> *@
                        <div class="col-xs-12 col-md-3 text-end">
                          @member.RealEstateValueAmt.ToString("C0")
                        </div>
                      </div>
                    }

                    <div class="row mb-3 border-top">
                      <div class="col-xs-11 col-md-6">
                        <strong>Total</strong>
                      </div>
                      <div class="col-xs-12 col-md-3 text-end">
                        <strong>@Model.Members.Sum(s => s.IncomeValueAmt).ToString("C0")</strong>
                      </div>
                      @* <div class="col-xs-12 col-md-2 text-end">
                        <strong>@Model.Members.Sum(s => s.AssetValueAmt).ToString("C0")</strong>
                      </div> *@
                      <div class="col-xs-12 col-md-3 text-end">
                        <strong>@Model.Members.Sum(s => s.RealEstateValueAmt).ToString("C0")</strong>
                      </div>
                    </div>
                  }

                  @if (Model.Accounts.Any())
                  {
                    <div class="row mb-3 mt-32">
                      <div class="col-xs-12">
                        <h5 class="fs5">Accounts &amp; Other Assets</h5>
                        <p class="small">The following household accounts and assets will be included in this application.</p>
                      </div>
                    </div>
                    <div class="row mb-3 border-bottom">
                      <div class="col-xs-12 col-md-3">
                        <small class="fw-bold">Account/Asset Type</small>
                      </div>
                      <div class="col-xs-12 col-md-3">
                        <small class="fw-bold">Institution/Instrument Name</small>
                      </div>
                      <div class="col-xs-12 col-md-2">
                        <small class="fw-bold">Account Number</small>
                      </div>
                      <div class="col-xs-12 col-md-2">
                        <small class="fw-bold">Primary Holder</small>
                      </div>
                      <div class="col-xs-12 col-md-2 text-end">
                        <small class="fw-bold">Asset Value</small>
                      </div>
                    </div>

                    foreach (var account in Model.Accounts)
                    {
                      <div class="row mb-3">
                        <div class="col-xs-12 col-md-3">
                          @account.DisplayAccountType
                        </div>
                        <div class="col-xs-12 col-md-3">
                          @account.InstitutionName
                        </div>
                        <div class="col-xs-12 col-md-2">
                          @account.DisplayAccountNumber
                        </div>
                        <div class="col-xs-11 col-md-2">
                          @account.PrimaryHolderMemberName
                        </div>
                        <div class="col-xs-12 col-md-2 text-end">
                          @account.AccountValueAmt.ToString("C0")
                        </div>
                      </div>
                    }

                    <div class="row mb-3 border-top">
                      <div class="col-xs-11 col-md-10">
                        <strong>Total</strong>
                      </div>
                      <div class="col-xs-12 col-md-2 text-end">
                        <strong>@Model.Accounts.Sum(s => s.AccountValueAmt).ToString("C0")</strong>
                      </div>
                    </div>
                  }
                  else
                  {
                    <div class="row mb-3 mt-32">
                      <div class="col-xs-12">
                        <h5 class="fs5">Accounts &amp; Other Assets</h5>
                        <p class="small text-secondary"><i class="fa-solid fa-triangle-exclamation text-warning"></i>&nbsp;There are no accounts or other asset types available for selection.</p>
                      </div>
                    </div>
                  }

                </div>
              </div>
            </div>

            <div class="text-left mt-16 mb-3">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Disclosures</h4>
                  <div class="card-text">
                    <p class="lead">Please review the following disclosures:</p>
                    @foreach (var item in Model.ListingDetails.Disclosures)
                    {
                      <div class="row mb-3">
                        <div class="col-xs-3 col-md-1 text-center">
                          <i class="fa-solid fa-circle small"></i>
                        </div>
                        <div class="col-xs-9 col-md-11">
                          @item.Text
                        </div>
                      </div>
                    }
                  </div>
                </div>
              </div>
            </div>

            <div class="text-left mt-16 mb-3">
              <div class="card text-bg-light border-0">
                <div class="card-body">
                  <h4 class="text-secondary whl-card-title">Declarations</h4>
                  <div class="card-text">
                    <p class="lead">Please read and certify the following declarations:</p>
                    @foreach (var item in Model.ListingDetails.Declarations)
                    {
                      <div class="row mb-3">
                        <div class="col-xs-3 col-md-1 text-center">
                          <div class="form-check form-switch">
                            <input type="checkbox" class="form-check-input whl-formfield-select-declaration" role="switch" />
                          </div>
                        </div>
                        <div class="col-xs-9 col-md-11">
                          <label class="form-label">@item.Text</label>
                        </div>
                      </div>
                    }
                  </div>
                </div>
              </div>
            </div>

            <div class="mt-32">
              <p class="lead">In order to submit your application, you must certify to the Declarations above.</p>
              @await Html.PartialAsync("_Actions.cshtml", new ApplicationActionsViewModel(Model.Username, Model.ApplicationId, Model.ListingId, Model.StepNumber))
            </div>
          }
        </div>
      </div>
    </div>
    <div class="col-xs-12 col-md-3">
      @await Html.PartialAsync("_ListingDetails.cshtml", Model.ListingDetails)
    </div>
  </div>
</div>

@await Html.PartialAsync("~/Views/Applications/_WithdrawApplication.cshtml")

@section Scripts
{
  <script>
    //<![CDATA[
    $(function () {

      $('.whl-action-submit-application').attr('disabled', 'disabled');
      fnToggleSubmit();

      var ssnShown = false;
      $('.whl-action-togglelast4ssn').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        ssnShown = !ssnShown;
        if (ssnShown) {
          $('.whl-show-last4ssn').hide();
          $('.whl-hide-last4ssn').show();
        } else {
          $('.whl-show-last4ssn').show();
          $('.whl-hide-last4ssn').hide();
        }
      });

      var dobShown = false;
      $('.whl-action-toggledateofbirth').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        dobShown = !dobShown;
        if (dobShown) {
          $('.whl-show-dateofbirth').hide();
          $('.whl-hide-dateofbirth').show();
        } else {
          $('.whl-show-dateofbirth').show();
          $('.whl-hide-dateofbirth').hide();
        }
      });

      $('.whl-formfield-select-declaration').on('change', function (e) {
        fnToggleSubmit();
      });

      function fnToggleSubmit() {
        var declarationCount = $('.whl-formfield-select-declaration').length;
        var ctr = 0;
        $('.whl-formfield-select-declaration').each((i, el) => {
          if ($(el).prop('checked')) {
            ctr++;
          }
        });
        if (ctr === declarationCount) {
          $('.whl-action-submit-application').removeAttr('disabled');
        } else {
          $('.whl-action-submit-application').attr('disabled', 'disabled');
        }
      }

      $('.whl-action-submit-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        $('.whl-formfield-savemode').val('NEXT');
        $('.whl-form-submit-application').submit();
      });

      $('.whl-action-withdraw-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        $('#withdrawApplicationModal').modal('show');
        $('.whl-action-cancel-withdraw-application').show();
        $('.whl-action-confirm-withdraw-application').show();
        $('.whl-label-confirm-withdraw-application-inprogress').hide();
      });
      $('.whl-action-confirm-withdraw-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        const applicationId = $(e.currentTarget).data('applicationid');
        $('.whl-action-cancel-withdraw-application').hide();
        $('.whl-action-confirm-withdraw-application').hide();
        $('.whl-label-confirm-withdraw-application-inprogress').show();
        $.post('@Url.Action("Withdraw", "Applications")?applicationId=' + applicationId)
          .done(function (response) {
            $('#withdrawApplicationModal').modal('hide');
            window.location.href = '@Url.Action("Dashboard", "Applications")';
          })
          .fail(function (error) {
            $('#withdrawApplicationModal').modal('hide');
            var message = error.responseJSON && error.responseJSON.message && error.responseJSON.message.length > 0 ? error.responseJSON.message : 'Failed to withdraw application due to one or more errors';
            if (error.responseJSON && error.responseJSON.details && error.responseJSON.details.length > 0) {
              message += '<br />' + error.responseJSON.details;
            }
            alert('Failed to withdraw application due to one or more errors!');
          });
      });

    });
    //]]>
  </script>
}