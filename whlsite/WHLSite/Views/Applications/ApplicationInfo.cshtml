@model EditableHousingApplicationViewModel
@{
  ViewData["Title"] = "Application Information";
  ViewData["MENUID"] = "DASHBOARD";
}

@await Html.PartialAsync("_Breadcrumb.cshtml", new RailroadViewModel(Model.Username, Model.ApplicationId,
Model.ListingId, Model.StepNumber))

<div class="text-left mt-32 bg-white">
  @await Html.PartialAsync("_Railroad.cshtml", new RailroadViewModel(Model.Username, Model.ApplicationId,
    Model.ListingId, Model.StepNumber))
  <div class="row mb-3">
    <div class="col-xs-12 col-md-9">
      <div class="card border-0">
        <div class="card-body">
          <h5 class="fs-4 border-bottom">@ViewData["Title"]</h5>
          @if (Model.ProfileDetails.IsIncomplete)
          {
            <div class="alert alert-danger d-flex align-items-center mt-32" role="alert">
              <div>
                <i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Please complete your profile information before
                applying for this opportunity.<br />
                <small>
                  <ul>
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.FirstName))
                    {
                      <li>First Name</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.LastName))
                    {
                      <li>Last Name</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.DisplayDateOfBirth))
                    {
                      <li>Date of Birth</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.Last4SSN))
                    {
                      <li>Last 4 of SSN/ITIN</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.Last4SSN))
                    {
                      <li>Identification Document</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.GenderDescription))
                    {
                      <li>Gender</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.RaceDescription))
                    {
                      <li>Race</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.EthnicityDescription))
                    {
                      <li>Ethnicity</li>
                    }
                    @if (string.IsNullOrEmpty(Model.ProfileDetails.PhysicalStreetLine1) ||
                                      string.IsNullOrEmpty(Model.ProfileDetails.PhysicalCity)
                                      || string.IsNullOrEmpty(Model.ProfileDetails.PhysicalStateCd) ||
                                      string.IsNullOrEmpty(Model.ProfileDetails.PhysicalZipCode)
                                      || string.IsNullOrEmpty(Model.ProfileDetails.PhysicalCounty))
                    {
                      <li>Physical Address</li>
                    }
                  </ul>
                </small>
              </div>
            </div>
            <a class="btn btn-sm btn-outline-primary mt-16" asp-area="" asp-controller="Profile" asp-action="Index"
              title="My Profile" aria-label="My Profile">My Profile</a>
          }
          else
          {
            <form class="form whl-form-application-info mt-32" id="frmApplicationInfo" name="frmApplicationInfo"
              asp-area="" asp-controller="Applications" asp-action="ApplicationInfo" novalidate="novalidate">

              @if (!string.IsNullOrEmpty((Model.Message ?? "").Trim()))
              {
                <div id="divSaveErrorMessage">
                  <h6 class="text-danger"><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Error</h6>
                  <p id="lblSaveErrorMessage">@Model.Message</p>
                  <hr />
                </div>
              }

              <div class="alert alert-info d-flex align-items-center mt-32" role="alert">
                <div>
                  <p><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Please review the information below for your
                    <strong>Profile</strong> and <strong>Household</strong>. If there are any changes required, please
                    visit the respective pages to review and update your information prior to applying for this
                    opportunity.
                  </p>
                  <a class="btn btn-sm btn-outline-primary mt-16" asp-area="" asp-controller="Profile" asp-action="Index"
                    title="My Profile" aria-label="My Profile">My Profile</a>
                  <a class="btn btn-sm btn-outline-primary mt-16" asp-area="" asp-controller="Household"
                    asp-action="Index" title="My Household" aria-label="My Household">My Household</a>
                </div>
              </div>

              @if (Model.ForWaitlist)
              {
                <div class="alert alert-warning d-flex align-items-center mt-32" role="alert">
                  <div>
                    <p><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;You are applying for the waitlist for this
                      opportunity.</p>
                  </div>
                </div>
              }

              @await Html.PartialAsync("_ProfileInfo.cshtml", Model)
              @await Html.PartialAsync("_ProfileAddressInfo.cshtml", Model)
              @await Html.PartialAsync("_ProfileContactInfo.cshtml", Model)
              @await Html.PartialAsync("_HouseholdMembersInfo.cshtml", Model)
              @await Html.PartialAsync("_HouseholdAccountsInfo.cshtml", Model)
              @await Html.PartialAsync("_HouseholdVoucherInfo.cshtml", Model)
              @await Html.PartialAsync("_HouseholdLiveInAideInfo.cshtml", Model)

              <hr />

              <div class="text-left mt-32">
                <div class="card text-bg-light border-0">
                  <div class="card-body">
                    <h4 class="text-dark whl-card-title">Units Applying For <span class="text-danger fw-bolder">*</span>
                    </h4>
                    <div class="card-text mt-16">
                      <div class="row mb-3">
                        <input type="hidden" class="whl-formfield-unittypecds" asp-for="UnitTypeCds"
                          value="@Model.UnitTypeCds" />
                        @foreach (var item in Model.UnitTypes)
                        {
                          var itemName = $"chkUnitTypeCd_{item.Key}";
                          var itemSelected = (Model.UnitTypeCds ?? "").Split(",",
                          StringSplitOptions.RemoveEmptyEntries).Contains(item.Key);
                          <div class="col-xs-12 col-md-3">
                            <div class="form-check form-switch">
                              @if (itemSelected)
                              {
                                <input class="form-check-input whl-formfield-unittypecd" type="checkbox"
                                  data-unittypecd="@item.Key" value="@item.Key" id="@itemName" name="@itemName"
                                  checked="checked" aria-checked="true" />
                              }
                              else
                              {
                                <input class="form-check-input whl-formfield-unittypecd" type="checkbox"
                                  data-unittypecd="@item.Key" value="@item.Key" id="@itemName" name="@itemName"
                                  aria-checked="false" />
                              }
                              <label for="@itemName" class="form-label">@item.Value</label>
                            </div>
                          </div>
                        }
                      </div>
                      <div class="row mb-3">
                        <div class="col-xs-12">
                          <small class="text-secondary"><strong class="text-dark">Note</strong> Household size will
                            determine eligibility for unit size/bedroom count.</small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div class="text-left mt-16">
                <div class="card text-bg-light border-0">
                  <div class="card-body">
                    <h4 class="text-dark whl-card-title">Additional Members</h4>
                    <div class="card-text mt-16">
                      @if (Model.Members.Any())
                      {
                        <p class="lead">Select one or more household members to be included in this application.</p>

                        <div class="row mb-3 border-bottom">
                          <div class="col-xs-1 col-md-1 text-center">
                            <div class="form-check form-switch">
                              <input type="checkbox" class="form-check-input whl-formfield-select-member-all"
                                role="switch" />
                            </div>
                          </div>
                          <div class="col-xs-11 col-md-2">
                            <small class="fw-bold">Relation Type</small>
                          </div>
                          <div class="col-xs-12 col-md-3">
                            <small class="fw-bold">Name</small>
                          </div>
                          <div class="col-xs-12 col-md-2 text-end">
                            <small class="fw-bold">Total Annual Gross Income</small>
                          </div>
                          <div class="col-xs-12 col-md-2 text-end">
                            <small class="fw-bold">Assets</small>
                          </div>
                          <div class="col-xs-12 col-md-2 text-end">
                            <small class="fw-bold">Real Estate</small>
                          </div>
                        </div>

                        foreach (var member in Model.Members)
                        {
                          <div class="row mb-3">
                            <div class="col-xs-1 col-md-1 text-center">
                              <div class="form-check form-switch">
                                <input type="checkbox" class="form-check-input whl-formfield-select-member" role="switch"
                                  data-memberid="@member.MemberId" data-membername="@member.DisplayName" />
                              </div>
                            </div>
                            <div class="col-xs-11 col-md-2">
                              @member.RelationTypeDescription
                            </div>
                            <div class="col-xs-12 col-md-3">
                              @member.DisplayName
                            </div>
                            <div class="col-xs-12 col-md-2 text-end">
                              @member.IncomeValueAmt.ToString("C0")
                            </div>
                            <div class="col-xs-12 col-md-2 text-end">
                              @member.AssetValueAmt.ToString("C0")
                            </div>
                            <div class="col-xs-12 col-md-2 text-end">
                              @member.RealEstateValueAmt.ToString("C0")
                            </div>
                          </div>
                        }

                        <div class="row mb-3 mt-64">
                          <div class="col-xs-12">
                            <h5 class="fs5">Co-Applicant Information</h5>
                            <p class="lead">Is any of the members included in this application a co-applicant?</p>
                          </div>
                        </div>
                        <div class="row mb-3">
                          <div class="col-xs-12 col-md-3">
                            @Html.DropDownListFor(e => e.CoApplicantMemberId, new SelectList(Model.CoApplicants, "Key",
                            "Value", Model.CoApplicantMemberId),
                                                htmlAttributes: new
                                                {
                                                  @class = "form-select whl-formfield-coapplicantmemberid",
                                                  placeholder =
                                                "Select Co-Applicant"
                                                })
                      </div>
                    </div>
                                        }
                      else
                      {
                        <div class="row mb-3 mt-32">
                          <div class="col-xs-12">
                            <p class="lead">You do not have any household members to add to this application. Please add one
                              or more
                              household members from the <a class="whl-link" asp-area="" asp-controller="Household"
                                asp-action="Index" title="Go to the Household page"
                                aria-label="Go to the Household page">Household</a> page, and come
                              back to submit application form.</p>
                          </div>
                        </div>
                      }
                    </div>
                  </div>
                </div>
              </div>

              @if ((Model.ListingDetails?.Accessibilities?.Count() ?? 0) > 0)
              {
                var accessibilityKeys = new string[] { "WHEELCHAIR", "HEARING", "VISION" };
                <div class="text-left mt-32">
                  <div class="card text-bg-light border-0">
                    <div class="card-body">
                      <h4 class="text-dark whl-card-title">Accessible Units</h4>
                      <div class="card-text mt-16">
                        @foreach (var key in accessibilityKeys)
                        {
                          if (Model.ListingDetails.Accessibilities.ContainsKey(key))
                          {
                            <div class="row mb-3">
                              <div class="col-xs-12 col-md-10">
                                @switch (key)
                                {
                                  case "WHEELCHAIR":
                                    <label class="form-label">Certain apartment units are fully accessible and adapted for
                                      wheelchair use. Do any of your household members have a physical disability with mobility
                                      impairment that requires a unit adapted for wheelchair use? <span
                                        class="text-danger fw-bolder">*</span></label>
                                    break;

                                  case "HEARING":
                                    <label class="form-label">Certain apartment units are fully accessible and adapted for
                                      individuals with hearing impairments. Do any of the household members require a unit that
                                      has been adapted for hearing impairment? <span class="text-danger fw-bolder">*</span></label>
                                    break;

                                  case "VISION":
                                    <label class="form-label">Certain apartment units are fully accessible and adapted for
                                      individuals with vision impairments. Do any of the household members require a unit that
                                      has been adapted for vision impairment? <span class="text-danger fw-bolder">*</span></label>
                                    break;
                                }
                              </div>
                              <div class="col-xs-12 col-md-2">
                                <div class="form-check form-switch">
                                  <input type="checkbox" class="form-check-input whl-formfield-select-accessibility"
                                    id="whl-formfield-select-accessibility-@key" name="whl-formfield-select-accessibility-@key"
                                    role="switch" data-accessiblitycd="@key" />
                                  <label class="form-check-label whl-formfieldlabel-select-accessibility-@key"
                                    for="whl-formfield-select-accessibility-@key">No</label>
                                </div>
                              </div>
                            </div>
                          }
                        }
                      </div>
                    </div>
                  </div>
                </div>
              }

              <div class="text-left mt-32">
                <div class="card text-bg-light border-0">
                  <div class="card-body">
                    <h4 class="text-dark whl-card-title">How Did You Hear About This Opportunity? <span
                        class="text-danger fw-bolder">*</span></h4>
                    <div class="card-text mt-16">
                      <div class="row mb-3">
                        <div class="col-xs-12 col-md-4">
                          <select class="form-select whl-formfield-leadtypecd" placeholder="Select One"
                            asp-for="LeadTypeCd"
                            asp-items="@(new SelectList(Model.LeadTypes, "Key", "Value", Model.LeadTypeCd))"></select>
                        </div>
                        <div class="col-xs-12 col-md-4 whl-formfieldcol-leadtypeother" style="display: none;">
                          <input type="text" class="form-control whl-formfield-leadtypeother" maxlength="200"
                            placeholder="Please specify" autocomplete="off" asp-for="LeadTypeOther" />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              @if (Model.ForWaitlist)
              {
                <div class="alert alert-warning d-flex align-items-center mt-32" role="alert">
                  <div>
                    <p><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;You are applying for the waitlist for this
                      opportunity.</p>
                  </div>
                </div>
              }

              <div class="mt-32">
                <input type="checkbox" class="whl-formfield-coapplicantind" asp-for="CoApplicantInd"
                  style="display: none;" />
                <input type="hidden" class="whl-formfield-memberids" asp-for="MemberIds" value="@Model.MemberIds" />
                <input type="hidden" class="whl-formfield-accessibilitycds" asp-for="AccessibilityCds" value="@Model.AccessibilityCds" />
                @await Html.PartialAsync("_Actions.cshtml", new ApplicationActionsViewModel(Model.Username,
                Model.ApplicationId, Model.ListingId, Model.StepNumber))
            </div>

          </form>
                    }
        </div>
      </div>
    </div>
    <div class="col-xs-12 col-md-3">
      @await Html.PartialAsync("_ListingDetails.cshtml", Model.ListingDetails)
    </div>
  </div>
</div>

@await Html.PartialAsync("~/Views/Applications/_WithdrawApplication.cshtml", new HousingApplicationViewModel() { ApplicationId = Model.ApplicationId, ListingAddress = Model.ListingDetails.AddressText })

@section Scripts
{
  <script>
    //<![CDATA[
    $(function () {

      var ssnShown = false;
      $('.whl-action-togglelast4ssn').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        ssnShown = !ssnShown;
        if (ssnShown) {
          $('.whl-show-last4ssn').hide();
          $('.whl-hide-last4ssn').show();
        } else {
          $('.whl-show-last4ssn').show();
          $('.whl-hide-last4ssn').hide();
        }
      });

      var dobShown = false;
      $('.whl-action-toggledateofbirth').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        dobShown = !dobShown;
        if (dobShown) {
          $('.whl-show-dateofbirth').hide();
          $('.whl-hide-dateofbirth').show();
        } else {
          $('.whl-show-dateofbirth').show();
          $('.whl-hide-dateofbirth').hide();
        }
      });

      $('.whl-action-review-application').attr('disabled', 'disabled');
      fnToggleSubmit();

      $('.whl-formfield-unittypecd').on('change', function (e) {
        let s = '';
        $('.whl-formfield-unittypecd').each((i, o) => {
          if ($(o).prop('checked')) {
            s += (s.length > 0 ? ',' : '') + $(o).data('unittypecd');
          }
        });
        $('.whl-formfield-unittypecds').val(s);
        fnToggleSubmit();
      });

      $('.whl-formfield-leadtypecd').on('change', function (e) {
        let v = $(this).val();
        if (v !== undefined && v !== null && v.trim().length > 0) {
          fnToggleLeadTypeOther();
        }
        fnToggleSubmit();
      });

      $('.whl-formfield-leadtypeother').on('change', function (e) {
        let v = $(this).val();
        if (v !== undefined && v !== null && v.trim().length > 0) {
          $(this).addClass('is-valid');
        } else {
          $(this).addClass('is-invalid');
        }
        fnToggleSubmit();
      });

      function fnToggleLeadTypeOther() {
        let lt = $('.whl-formfield-leadtypecd').val();
        let lto = $('.whl-formfield-leadtypeother').val();
        if (lt === 'WEBSITE' || lt === 'NEWSPAPERART' || lt === 'OTHER') {
          $('.whl-formfieldcol-leadtypeother').show();
        } else {
          $('.whl-formfieldcol-leadtypeother').hide();
          $('.whl-formfield-leadtypeother').val('');
        }
      }

      function fnToggleSubmit() {
        let ua = $('.whl-formfield-unittypecds').val();
        let lt = $('.whl-formfield-leadtypecd').val();
        let lto = $('.whl-formfield-leadtypeother').val();
        let allowSubmission = (ua !== undefined && ua !== null && ua.trim().length > 0)
          && (lt !== undefined && lt !== null && lt.trim().length > 0);
        if (allowSubmission && (lt === 'WEBSITE' || lt === 'NEWSPAPERART' || lt === 'OTHER')) {
          allowSubmission = (lto !== undefined && lto !== null && lto.trim().length > 0);
        }
        if (allowSubmission) {
          $('.whl-action-review-application').removeAttr('disabled');
        }
        else {
          $('.whl-action-review-application').attr('disabled', 'disabled');
        }
      }

      fnInitSelections();

      function fnInitSelections() {
        let v = $('.whl-formfield-memberids').val();
        if (v !== undefined && v !== null && v.trim().length > 0) {
          let s = v.split(',');
          for (let sc = 0; sc < s.length; sc++) {
            $('.whl-formfield-select-member').each((j, el) => {
              if ($(el).data('memberid').toString() === s[sc]) {
                $(el).prop('checked', true);
              }
            });
          }
        }
        fnToggleAllMembers();
      }

      $('.whl-formfield-select-member-all').on('change', function (e) {
        let c = $(this).prop('checked');
        $('.whl-formfield-select-member').prop('checked', c);
        let s = '';
        if (c) {
          $('.whl-formfield-select-member').each((i, el) => {
            s += (s.length > 0 ? ',' : '') + $(el).data('memberid');
          });
        }
        $('.whl-formfield-memberids').val(s);
        fnSetupCoApplicant();
      });

      $('.whl-formfield-select-member').on('change', function (e) {
        fnToggleAllMembers();
        fnSetupCoApplicant();
      });

      function fnToggleAllMembers() {
        let ctr = 0;
        const total = $('.whl-formfield-select-member').length;
        let s = '';
        $('.whl-formfield-select-member').each((i, el) => {
          if ($(el).prop('checked')) {
            s += (s.length > 0 ? ',' : '') + $(el).data('memberid');
            ctr++;
          }
        });
        $('.whl-formfield-memberids').val(s);
        if (ctr === total) {
          $('.whl-formfield-select-member-all').prop('checked', true);
        } else {
          $('.whl-formfield-select-member-all').prop('checked', false);
        }
      }

      function fnSetupCoApplicant() {
        let ctr = 0;
        const total = $('.whl-formfield-select-member').length;
        let h = '<option value="0">None</option>';
        $('.whl-formfield-select-member').each((i, el) => {
          if ($(el).prop('checked')) {
            ctr++;
            h += '<option value="' + $(el).data('memberid') + '">' + $(el).data('membername') + '</option>';
          }
        });
        $('.whl-formfield-coapplicantmemberid').html(h);
        $('.whl-formfield-coapplicantmemberid').val(0);
      }

      $('.whl-formfield-coapplicantmemberid').on('change', function (e) {
        let v = parseFloat($(this).val());
        $('.whl-formfield-coapplicantind').prop('checked', !isNaN(v) && v > 0);
      });

      $('.whl-action-review-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        $('.whl-formfield-savemode').val('REVIEW');
        $('.whl-form-application-info')[0].submit();
      });

      $('.whl-action-withdraw-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        $('#withdrawApplicationModal').modal('show');
        $('.whl-action-cancel-withdraw-application').show();
        $('.whl-action-confirm-withdraw-application').show();
        $('.whl-label-confirm-withdraw-application-inprogress').hide();
      });
      $('.whl-action-confirm-withdraw-application').on('click', function (e) {
        e.preventDefault();
        e.stopPropagation();
        const applicationId = $(e.currentTarget).data('applicationid');
        $('.whl-action-cancel-withdraw-application').hide();
        $('.whl-action-confirm-withdraw-application').hide();
        $('.whl-label-confirm-withdraw-application-inprogress').show();
        $.post('@Url.Action("Withdraw", "Applications")?applicationId=' + applicationId)
          .done(function (response) {
            $('#withdrawApplicationModal').modal('hide');
            window.location.href = '@Url.Action("Dashboard", "Applications")';
          })
          .fail(function (error) {
            $('#withdrawApplicationModal').modal('hide');
            var message = error.responseJSON && error.responseJSON.message && error.responseJSON.message.length > 0 ? error.responseJSON.message : 'Failed to withdraw application due to one or more errors';
            if (error.responseJSON && error.responseJSON.details && error.responseJSON.details.length > 0) {
              message += '<br />' + error.responseJSON.details;
            }
            alert('Failed to withdraw application due to one or more errors!');
          });
      });

      $('.whl-formfield-select-accessibility').on('change', function (e) {
        let c = $(this).prop('checked');
        let cd = $(this).data('accessiblitycd');
        $('.whl-formfieldlabel-select-accessibility-' + cd).html(c ? 'Yes' : 'No');
        fnSetAccessibilityCds();
      });

      function fnSetAccessibilityCds() {
        let selectedCds = '';
        $('.whl-formfield-select-accessibility').each((i, elem) => {
          let c = $(elem).prop('checked');
          let cd = $(elem).data('accessiblitycd');
          console.debug(cd + ': ' + c);
          if (c) {
            selectedCds += (selectedCds.length > 0 ? ',' : '') + cd;
          }
        });
        console.debug(selectedCds);
        $('.whl-formfield-accessibilitycds').val(selectedCds);
      }

    });
    //]]>
  </script>
}