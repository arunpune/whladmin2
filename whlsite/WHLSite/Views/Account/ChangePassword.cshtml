@model ChangePasswordViewModel
@{
  ViewData["Title"] = "Change Password";
  ViewData["MENUID"] = "PROFILE";
}

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a class="whl-link" asp-area="" asp-controller="Home" asp-action="Index" title="Home"><i
          class="fa-solid fa-house"></i></a></li>
    <li class="breadcrumb-item"><a class="whl-link" asp-area="" asp-controller="Profile" asp-action="Index"
        title="Profile">Profile</a></li>
    <li class="breadcrumb-item active" aria-current="page">Change Password</li>
  </ol>
</nav>

<div class="text-left mt-32 profile-page">
  <div class="login-container">
    <div class="card shadow-lg">
      @* <h5 class="card-header">Change Password</h5> *@
      <div class="card-body">
        <h4 class="text-secondary whl-card-title">Change Password</h4>
        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form whl-form-change-password", id = "frmChangePassword", name = "frmChangePassword" }))
        {
          if (!string.IsNullOrEmpty((Model.Message ?? "").Trim()))
          {
            <div id="divSaveErrorMessage">
              <h6 class="text-danger"><i class="fa-solid fa-triangle-exclamation"></i>&nbsp;Error</h6>
              <p id="lblSaveErrorMessage">@Model.Message</p>
              <hr />
            </div>
          }

          @Html.HiddenFor(h => h.Username);

          <div class="row mb-3">
            @Html.LabelFor(l => l.CurrentPassword, htmlAttributes: new { @class = "col-sm-4 form-label small fw-bolder" })
            <div class="col-sm-8">
              @Html.PasswordFor(e => e.CurrentPassword, htmlAttributes: new { @class = "form-control whl-formfield-currentpassword", placeholder = "Enter Current Password", autocomplete = "off" })
              <div id="whl-formfield-helptext-confirmpassword" class="form-text">Enter your current password.</div>
              @Html.ValidationMessageFor(v => v.CurrentPassword)
            </div>
          </div>

          <div class="row mb-3">
            @Html.LabelFor(l => l.NewPassword, htmlAttributes: new { @class = "col-sm-4 form-label small fw-bolder" })
            <div class="col-sm-8">
              @Html.PasswordFor(e => e.NewPassword, htmlAttributes: new { @class = "form-control whl-formfield-password", placeholder = "Enter New Password", autocomplete = "off" })
              <div id="whl-formfield-helptext-password" class="form-text">Your new password must be a minimum of 14 characters long, and contain at least one lowercase, one uppercase, one number and one special character. You may not reuse the previous password.</div>
              @Html.ValidationMessageFor(v => v.NewPassword)
            </div>
          </div>

          <div class="row mb-3">
            @Html.LabelFor(l => l.ConfirmationPassword, htmlAttributes: new { @class = "col-sm-4 form-label small fw-bolder" })
            <div class="col-sm-8">
              @Html.PasswordFor(e => e.ConfirmationPassword, htmlAttributes: new { @class = "form-control whl-formfield-confirmpassword", placeholder = "Confirm Password", autocomplete = "off" })
              <div id="whl-formfield-helptext-confirmpassword" class="form-text">Passwords must match.</div>
              @Html.ValidationMessageFor(v => v.ConfirmationPassword)
            </div>
          </div>

          <input type="hidden" id="hidChangePasswordAction" name="hidChangePasswordAction" value="" />
          @Html.HiddenFor(h => h.RecaptchaEnabled, htmlAttributes: new { @class = "whl-formfield-recaptchaenabled" })
          @if (Model.RecaptchaEnabled == "1")
          {
            @Html.HiddenFor(h => h.RecaptchaVersion, htmlAttributes: new { @class = "whl-formfield-recaptchaversion" })
            @Html.HiddenFor(h => h.RecaptchaAction, htmlAttributes: new { @class = "whl-formfield-recaptchaaction" })
            @Html.HiddenFor(h => h.RecaptchaToken, htmlAttributes: new { @class = "whl-formfield-grecaptchatoken" })
            <div class="g-recaptcha" data-sitekey="@Model.RecaptchaKey" data-callback="fnChangePassword" data-size="invisible"></div>
          }
          <a class="btn btn-outline-secondary whl-action-cancel-password" asp-area="" asp-controller="Profile" asp-action="Index" title="Cancel" aria-label="Cancel">Cancel</a>
          <button type="submit" class="btn btn-primary whl-action-change-password">Change</button>
        }
      </div>
    </div>
  </div>
</div>

@section Scripts
{
  @if (Model.RecaptchaEnabled == "1")
  {
    <script src="@Model.RecaptchaTokenUrl" async defer></script>
    <script src="~/js/password/changepassword.recaptcha.@(Model.RecaptchaVersion).js" asp-append-version="true"></script>
  }
  else
  {
    <script src="~/js/password/changepassword.actions.js" asp-append-version="true"></script>
  }
  <script src="~/js/password/changepassword.validations.js" asp-append-version="true"></script>
}